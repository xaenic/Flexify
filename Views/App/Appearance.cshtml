@model AppearanceModel

@{
    ViewData["Title"] = "Appearance";
}

<div class="p-10 bg-slate-100">
    @await Component.InvokeAsync("NavbarMenu")
    <div class="grid grid-cols-3 items-start">
        <div class="col-span-2 p-10 flex flex-col gap-10">
            <section>
                <h1 class="font-medium text-xl mb-2">Profile</h1>
                <div class="p-10 bg-white rounded-md min-w-[720px]">
                   <div class="flex items-center gap-3">
                        <div id="imageDisplay" class="imageDisplay">
                            @if (Model.User?.ProfileImage != null)
                            {
                                <div class="overflow-hidden rounded-full">
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.User?.ProfileImage)" class="w-24 h-24 object-cover" />
                                </div>
                            }
                            else
                            {
                                <div class="bg-gray-800 w-24 h-24 rounded-full text-white flex items-center justify-center text-4xl">
                                    @Model.FirstName?[0]
                                </div>
                            }
                        </div>
                        
                        <div class="flex flex-col gap-3">
                            <div>
                                <input id="imageInput" type="file" class="block w-full text-sm text-slate-500
                                  file:mr-4 file:py-2 file:px-4
                                  file:rounded-full file:border-0
                                  file:text-sm file:font-semibold
                                  file:bg-violet-50 file:text-violet-700
                                  hover:file:bg-violet-100
                                " />
                            </div>
                            <button id="remove" class="text-sm bg-[#3C153B] p-3 rounded-xl text-white w-full">Remove Image</button>
                        </div>
                        <script>
                            $(document).ready(function () {
                                $("#remove").click(async function () {
                                    try {
                                        const response = await fetch('/App/RemoveProfileImage', {
                                            method: 'DELETE'
                                        });

                                        if (response.ok) {
                                            const html = '<div class="bg-gray-800 w-24 h-24 rounded-full text-white flex items-center justify-center text-4xl">@Model?.User.FirstName?[0]</div>';
                                            $('.imageDisplay').html(html);
                                            $('#imageInput').val(null);
                                        } else {
                                            console.error('Failed to remove image');
                                        }
                                    } catch (error) {
                                        console.error('Error removing image:', error);
                                    }
                                });

                                $('#username').on('input', function (event) {
                                    $('.username').html("@@" + this.value);
                                });

                                $('#bio').on('input', function (event) {
                                    $('.bio').html(this.value);
                                });

                                $('#imageInput').on('input', function (event) {
                                    var inputFile = event.target;
                                    if (inputFile.files && inputFile.files[0]) {
                                        var reader = new FileReader();
                                        reader.onload = function (e) {
                                            const image = `<div class="overflow-hidden rounded-full"><img src="${e.target.result}" class="w-24 h-24 object-cover" /></div>`;
                                            $('.imageDisplay').html(image);
                                        };
                                        reader.readAsDataURL(inputFile.files[0]);

                                        // Upload the image
                                        var formData = new FormData();
                                        formData.append('profileImage', inputFile.files[0]);

                                        fetch('/App/UploadProfileImage', {
                                            method: 'POST',
                                            body: formData
                                        }).then(response => {
                                            if (response.ok) {
                                                console.log('Image uploaded successfully');
                                            } else {
                                                console.error('Failed to upload image');
                                            }
                                        }).catch(error => {
                                            console.error('Error uploading image:', error);
                                        });
                                    }
                                });
                            });
                        </script>
                   </div>
                    <div class="mt-10 flex flex-col gap-4">
                        <div class="flex flex-col">
                            <span class="text-sm text-gray-600">Username</span>
                            <div class="bg-zinc-100 p-3 flex rounded-md text-sm text-sky-500">
                                @@<input id="username" type="text" value="@Model?.User?.Username" class=" w-full bg-transparent outline-none" />
                            </div>
                        </div>
                        <form asp-action="EditBio" method="post">
                            <div class="bg-zinc-100 p-3 flex rounded-md text-sm text-sky-500">
                                <textarea id="bio" name="bio" type="text" class="text-xs w-full bg-transparent outline-none">@Model?.User?.Bio</textarea>
                            </div>
                            <button type="submit" class="p-3 bg-[#DB4C40] text-white text-sm w-full mt-4 rounded-md">Save</button>
                        </form>
                     
            </section>
            <section>
                <h1 class="text-xl font-medium">Socials</h1>
                <div>
                    <button type="button" class="text-sm bg-[#3C153B] p-3 rounded-xl text-white w-15" id="openModal">Add Social Media</button>
                    <button id="openModalButton2" class="text-sm bg-[#3C153B] p-3 rounded-xl text-white">Add Page Media</button>



                    <div id="myModal2" class="modal hidden fixed w-full h-full top-0 left-0 flex items-center justify-center">
                        <div class="modal-overlay absolute w-full h-full bg-gray-900 opacity-50"></div>
                        <div class="modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto p-6">
                            <div class="modal-close2 cursor-pointer z-50">
                                <svg class="fill-current text-black" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
                                    <path d="M18 1.5L16.5 0 9 7.5 1.5 0 0 1.5 7.5 9 0 16.5 1.5 18 9 10.5 16.5 18 18 16.5 10.5 9 18 1.5z" />
                                </svg>
                            </div>
                            <div class="modal-content py-4 text-left px-6">
                                <h3 class="text-center">Add icon Social</h3>
                                <form id="addContentForm" asp-controller="App" asp-action="AddContent" method="post" class="px-8 pt-6 pb-8 mb-4">
                                    <input type="hidden" id="userId" name="userId" value="@Model?.User?.Id">
                                    <input type="text" id="title" name="title" placeholder="Title" class="w-full border rounded-md px-4 py-2 mb-4">
                                    <input type="text" id="description" name="description" placeholder="Description" class="w-full border rounded-md px-4 py-2 mb-4">
                                    <input type="text" id="url" name="url" placeholder="URL" class="w-full border rounded-md px-4 py-2 mb-4">
                                    <button type="submit" id="submitContent2" class="bg-[#3C153B] text-white rounded-md py-2 px-4">Submit</button>
                                </form>
                            </div>
                        </div>
                    </div>

                    <script>
                        function openModal2() {
                            var modal = document.getElementById("myModal2");
                            modal.classList.remove("hidden");
                        }

                        function closeModal2() {
                            var modal = document.getElementById("myModal2");
                            modal.classList.add("hidden");
                            location.reload(); 
                        }

                        document.getElementById("addContentForm").addEventListener("submit", function () {

                        });

                        var openModalButton2 = document.getElementById("openModalButton2");

                        openModalButton2.onclick = openModal2;

                        var closeButton2 = document.querySelector(".modal-close2");

                        closeButton2.onclick = closeModal2;
                        window.addEventListener("click", function (event) {
                            var modal = document.getElementById("myModal2");
                            if (event.target === modal) {
                                closeModal2();
                            }
                        });
                    </script>
                    @foreach (var pages in Model.page)
                    {
                        <div class="post bg-white rounded-md p-4 my-4 shadow-md flex items-center">

                            <div class="flex-1">
                                <p class="text-gray-700">Title : @pages.Title</p>
                                <p class="text-gray-700">Url : @pages.Url</p>
                                <p class="text-gray-700">Description : @pages.Description</p>
                            </div>
                            <div>
                              <form asp-controller="App" asp-action="DeletePage" method="post">
                                    <input type="hidden" name="pageId" value="@pages.Id" />
                                    <button type="submit" class="bg-red-500 text-white rounded-md py-2 px-4">Delete</button>
                               </form>
                            </div>
                        </div>
                    }

                    @foreach (var social in Model.Socials)
                    {
                        <div class="post bg-white rounded-md p-4 my-4 shadow-md flex items-center">
                           
                            <div class="flex-1">
                                <p class="text-gray-700">@social.emailsocial</p>
                            </div>
                            <div>
                                <button class="delete-button bg-red-500 text-white rounded px-2 py-1" data-id="@social.Id" data-user-id="@social.user_id" data-social-type="@social.SocialType">Delete</button>
                        </div>
                    </div>
                    }
                    <div id="myModal" class="modal fixed w-full h-full top-0 left-0 flex items-center justify-center hidden">
                        <div class="modal-overlay absolute w-full h-full bg-gray-900 opacity-50"></div>
                        <div class="modal-container bg-white w-1/2 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto p-6">
                            <div class="modal-close cursor-pointer z-50">
                                <svg class="fill-current text-black" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
                                    <path d="M18 1.5L16.5 0 9 7.5 1.5 0 0 1.5 7.5 9 0 16.5 1.5 18 9 10.5 16.5 18 18 16.5 10.5 9 18 1.5z" />
                                </svg>
                            </div>


                            <div id="socialMediaInputModal" class="modal fixed w-full h-full top-0 left-0 flex items-center justify-center hidden">
                            <div class="modal-overlay absolute w-full h-full bg-gray-900 opacity-50"></div>
                            <div class="modal-container bg-white w-1/2 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto p-6">
                                    <button class="modal-close cursor-pointer z-50 " onclick="closeSocialMediaInputModal()">
                                        <span>&lt;</span>
                                    </button>
                                <h3 id="socialMediaInputTitle" class="text-center p-5">Social Media Input</h3>
                                    <input id="social" name="social" type="hidden" value="@Model?.User?.Id">
                                    <input id="ids" name="ids" type="hidden" value="">
                                    <input type="text" id="socialMediaNumerber" class="w-full border rounded-md px-4 py-2 mb-4" placeholder="Enter your link or email...">
                                    <button id="submitSocialMediaInput" type="submit" class="text-sm bg-[#3C153B] p-3 rounded-xl text-white w-15">Submit</button>
                            </div>

                            <script>
                                function openSocialMediaInputModal(socialMedia) {
                                    var modal = document.getElementById("socialMediaInputModal");
                                    var title = document.getElementById("socialMediaInputTitle");
                                    var input = document.getElementById("socialMediaNumerber");
                                    var ids = document.getElementById("ids");

                                    switch (socialMedia) {
                                        case 'facebook':
                                            title.textContent = "Enter Facebook Username";
                                                input.placeholder = "Enter your Facebook Username...";
                                            ids.value = 1;
                                            break;
                                        case 'tiktok':
                                                title.textContent = "Enter TikTok Username";
                                                input.placeholder = "Enter your TikTok Username...";
                                            ids.value = 2;
                                            break;
                                        case 'twitter':
                                                title.textContent = "Enter Twitter Username";
                                                input.placeholder = "Enter your Twitter Username...";
                                            ids.value = 3;
                                            break;
                                        case 'github':
                                                title.textContent = "Enter GitHub Username";
                                                input.placeholder = "Enter your GitHub Username...";
                                            ids.value = 4;
                                            break;
                                        case 'instagram':
                                                title.textContent = "Enter Instagram Username";
                                                input.placeholder = "Enter your Instagram Username...";
                                            ids.value = 5;
                                            break;
                                        default:
                                            break;
                                    }

                                    modal.classList.remove("hidden");
                                }

                                function closeSocialMediaInputModal() {
                                    var modal = document.getElementById("socialMediaInputModal");
                                    modal.classList.add("hidden");
                                }

                                document.getElementById("submitSocialMediaInput").addEventListener("click", function () {
                                    var email = document.getElementById("socialMediaNumerber").value;
                                    var socialType = document.getElementById("ids").value;
                                    var userId = document.getElementById("social").value;

                                    var data = {
                                            Emails: email,
                                            UserId: @Model?.User?.Id,
                                            SocialType: parseInt(socialType)
                                    };

                                    $.ajax({
                                        type: "POST",
                                        url: "/App/SubmitSocialMediaEmail",
                                        data: JSON.stringify(data),
                                        contentType: "application/json",
                                        success: function (response) {
                                            if (response.success) {
                                                alert(response.message);
                                                closeSocialMediaInputModal();
                                            } else {
                                                alert(response.message);
                                            }
                                        },
                                        error: function () {
                                            alert("An error occurred while submitting the email.");
                                        }
                                    });
                                });
                                    document.querySelectorAll('.delete-button').forEach(button => {
                                        button.addEventListener('click', function () {
                                            const id = this.getAttribute('data-id');
                                            const userId = this.getAttribute('data-user-id');
                                            const socialType = this.getAttribute('data-social-type');
                                            if (confirm('Are you sure you want to delete this email?')) {
                                                fetch('/App/DeleteSocialMediaEmail', {
                                                    method: 'POST',
                                                    headers: {
                                                        'Content-Type': 'application/json',
                                                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                                    },
                                                    body: JSON.stringify({ Id: id, UserId: userId, SocialType: socialType })
                                                })
                                                    .then(response => response.json())
                                                    .then(data => {
                                                        if (data.success) {
                                                            this.closest('.post').remove();
                                                        } else {
                                                            alert(data.message);
                                                        }
                                                    })
                                                    .catch(error => console.error('Error:', error));
                                            }
                                        });
                                    });
                            </script>
                               

                        </div>
                            <div class="p-6">

                            <h3 class="text-center">Add icon Social</h3>
                                <input type="text" id="searchInput" placeholder="Search..." class="w-full border rounded-md px-4 py-2 mb-4">
                                <div class="flex flex-col justify-start p-5" id="socialButtons">
                                    <button id="openModal1" class="mb-2 flex justify-between p-2" onclick="openSocialMediaInputModal('facebook')">
                                        <svg class="w-7 h-7 text-gray-800 cursor-pointer rounded-full hover:border-2 border-gray-800" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2.04c-5.5 0-10 4.49-10 10.02c0 5 3.66 9.15 8.44 9.9v-7H7.9v-2.9h2.54V9.85c0-2.51 1.49-3.89 3.78-3.89c1.09 0 2.23.19 2.23.19v2.47h-1.26c-1.24 0-1.63.77-1.63 1.56v1.88h2.78l-.45 2.9h-2.33v7a10 10 0 0 0 8.44-9.9c0-5.53-4.5-10.02-10-10.02" /></svg>
                                        <span class="text-gray-600">FACEBOOK</span>
                                        <span>&gt;</span>
                                    </button>
                                    <button id="openModal2" class="mb-2 flex justify-between p-2" onclick="openSocialMediaInputModal('tiktok')">
                                        <svg class="w-7 h-7 text-gray-800 cursor-pointer rounded-full hover:border-2 border-gray-800" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2.04c-5.5 0-10 4.49-10 10.02c0 5 3.66 9.15 8.44 9.9v-7H7.9v-2.9h2.54V9.85c0-2.51 1.49-3.89 3.78-3.89c1.09 0 2.23.19 2.23.19v2.47h-1.26c-1.24 0-1.63.77-1.63 1.56v1.88h2.78l-.45 2.9h-2.33v7a10 10 0 0 0 8.44-9.9c0-5.53-4.5-10.02-10-10.02" /></svg>
                                        <span class="text-gray-600">TIKTOK</span>
                                        <span>&gt;</span>
                                    </button>
                                    <button id="openModal3" class="mb-2 flex justify-between p-2" onclick="openSocialMediaInputModal('twitter')">
                                        <svg class="w-7 h-7 text-gray-800 cursor-pointer rounded-full hover:border-2 border-gray-800" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2.04c-5.5 0-10 4.49-10 10.02c0 5 3.66 9.15 8.44 9.9v-7H7.9v-2.9h2.54V9.85c0-2.51 1.49-3.89 3.78-3.89c1.09 0 2.23.19 2.23.19v2.47h-1.26c-1.24 0-1.63.77-1.63 1.56v1.88h2.78l-.45 2.9h-2.33v7a10 10 0 0 0 8.44-9.9c0-5.53-4.5-10.02-10-10.02" /></svg>
                                        <span class="text-gray-600">TWITTER</span>
                                        <span>&gt;</span>
                                    </button>
                                    <button id="openModal4" class="mb-2 flex justify-between p-2" onclick="openSocialMediaInputModal('github')">
                                        <svg class="w-7 h-7 text-gray-800 cursor-pointer rounded-full hover:border-2 border-gray-800" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2.04c-5.5 0-10 4.49-10 10.02c0 5 3.66 9.15 8.44 9.9v-7H7.9v-2.9h2.54V9.85c0-2.51 1.49-3.89 3.78-3.89c1.09 0 2.23.19 2.23.19v2.47h-1.26c-1.24 0-1.63.77-1.63 1.56v1.88h2.78l-.45 2.9h-2.33v7a10 10 0 0 0 8.44-9.9c0-5.53-4.5-10.02-10-10.02" /></svg>
                                        <span class="text-gray-600">GITHUB</span>
                                        <span>&gt;</span>
                                    </button>
                                    <button id="openModal5" class="mb-2 flex justify-between p-2" onclick="openSocialMediaInputModal('instagram')">
                                        <svg class="w-7 h-7 text-gray-800 cursor-pointer rounded-full hover:border-2 border-gray-800" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2.04c-5.5 0-10 4.49-10 10.02c0 5 3.66 9.15 8.44 9.9v-7H7.9v-2.9h2.54V9.85c0-2.51 1.49-3.89 3.78-3.89c1.09 0 2.23.19 2.23.19v2.47h-1.26c-1.24 0-1.63.77-1.63 1.56v1.88h2.78l-.45 2.9h-2.33v7a10 10 0 0 0 8.44-9.9c0-5.53-4.5-10.02-10-10.02" /></svg>
                                        <span class="text-gray-600">INSTAGRAM</span>
                                        <span>&gt;</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                        <script>
                            function showRelevantButton() {
                                const searchText = document.getElementById("searchInput").value.toLowerCase();
                                const socialButtons = document.getElementById("socialButtons").children;
                                for (let button of socialButtons) {
                                    const buttonText = button.querySelector("span").textContent.toLowerCase();
                                    if (buttonText.includes(searchText) || searchText === "") {
                                        button.style.visibility = "visible";
                                        utton.style.display = "block";
                                    } else {
                                        button.style.visibility = "hidden";
                                        button.style.display = "none";
                                    }
                                }
                            }
                            document.getElementById("searchInput").addEventListener("input", showRelevantButton);
                             
                            
                            
                            //for openmodal/closemodal
                                var modal = document.getElementById("myModal");
                                var openModalButton = document.getElementById("openModal");
                                var closeButton = document.querySelector(".modal-close");
                                openModalButton.onclick = function () {
                                    modal.classList.remove("hidden");
                                }
                                closeButton.addEventListener("click", function () {
                                    modal.classList.add("hidden");
                                location.reload();
                                });
                                window.addEventListener("click", function (event) {
                                    if (event.target === modal) {
                                        modal.classList.add("hidden");
                                    }
                                });
                    </script>
                </div>
            </section>
            <form asp-action="Theme" method="post">
                <div class="flex gap-2 items-center justify-between ">
                    <select id="themeSelect" onchange="changeTheme(this.value)" class="w-full p-4 theme-select rounded-md text-gray-700 text-sm font-medium transition-colors duration-200 ease-in-out">
                        <option value="theme1">Theme 1 - Pure White</option>
                        <option value="theme2">Theme 2 - Light Gray</option>
                        <option value="theme3">Theme 3 - Medium Gray</option>
                        <option value="theme4">Theme 4 - Dark Gray</option>
                        <option value="theme5">Theme 5 - Charcoal Gray</option>
                        <option value="theme6">Theme 6 - Facebook Blue</option>
                        <option value="theme7">Theme 7 - Twitter Blue</option>
                        <option value="theme8">Theme 8 - LinkedIn Blue</option>
                        <option value="theme9">Theme 9 - Sky Blue</option>
                        <option value="theme10">Theme 10 - Red</option>
                    </select>
                    <input id="userId" name="UserId" type="hidden" value="@Model?.User?.Id">
                    <input type="hidden" id="selectedTheme" name="SelectedTheme" value="">
                    <button type="submit" class="p-3 bg-[#DB4C40] text-white text-sm   rounded-md shrink-0">Save Theme</button>
                </div>
                </form>
           
        <div class="profile">
            <h1 class="mb-3">Write A Post</h1>

            <form asp-action="Post" method="post" enctype="multipart/form-data">
                <div class="bg-white  p-3 flex rounded-md text-sm text-sky-500">
                    <textarea id="POST" name="post_content" cols="50" rows="10" type="text" class="text-xs w-full bg-transparent outline-none" placeholder="Write something..."></textarea>
                </div>
                <div class="flex justify-between items-center mt-4">
                    <label for="image_upload" class="text-sm bg-[#3C153B] p-3 text-white cursor-pointer rounded-md">Upload Image:</label>
                    <input id="image_upload" name="image_upload" type="file" accept="image/*" class="hidden" />
                    <button type="submit" class="p-3 bg-[#DB4C40] text-white text-sm rounded-md">Post</button>
                </div>
            </form>
            <div id="posts" class="mt-6">
                @foreach (var post in Model.posts)
                {
                    <div class="post bg-white rounded-md p-4 my-4 shadow-md flex items-center">
                        @if (post.Image != null)
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(post.Image)" class="h-[100px] w-[100px] rounded-md mr-4" />
                        }
                        <div class="flex-1">
                            <p class="text-gray-700">@post.Content</p>
                        </div>
                            <form action="/App/DeletePost" method="post">
                                <input type="hidden" name="id" value="@post.Id" />
                                <button type="submit" class="delete-button bg-red-500 text-white rounded px-2 py-1">Delete</button>
                            </form>
                    </div>
                }
            </div>
           

        </div>
       </div>

        <div class="flex items-center justify-center p-10">
            <div id="container" class="h-[620px] w-[316px]  rounded-[46px] border-gray-600 border-8 overflow-hidden p-5 pr-0 flex items-center flex-col ">
            <div id="imageDisplay" class="imageDisplay">
                @if (Model.User?.ProfileImage != null)
                {
                    <div class="overflow-hidden rounded-full">
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.User?.ProfileImage)" class="w-24 h-24 object-cover" />
                    </div>
                }
                else
                {
                    <div class="bg-gray-800 w-24 h-24 rounded-full text-white flex items-center justify-center text-4xl">
                        @Model.FirstName?[0]
                    </div>
                }
            </div>
                <div class="flex justify-center flex-col items-center mt-2 gap-2">
                    <span class="username text-center text-xs w-full">@@@Model?.User?.Username</span>
                    <p class="bio text-center text-xs w-full italic">@Model?.User?.Bio</p>
                 </div>
                <div>
                   
                </div>
                <div class="flex gap-2 mt-2">
                    <svg class="w-7 h-7 text-gray-800 cursor-pointer rounded-full hover:border-2 border-gray-800" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2.04c-5.5 0-10 4.49-10 10.02c0 5 3.66 9.15 8.44 9.9v-7H7.9v-2.9h2.54V9.85c0-2.51 1.49-3.89 3.78-3.89c1.09 0 2.23.19 2.23.19v2.47h-1.26c-1.24 0-1.63.77-1.63 1.56v1.88h2.78l-.45 2.9h-2.33v7a10 10 0 0 0 8.44-9.9c0-5.53-4.5-10.02-10-10.02" /></svg>
                    <svg class="w-7 h-7 text-gray-800 cursor-pointer rounded-full hover:border-2 border-gray-800" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M7.8 2h8.4C19.4 2 22 4.6 22 7.8v8.4a5.8 5.8 0 0 1-5.8 5.8H7.8C4.6 22 2 19.4 2 16.2V7.8A5.8 5.8 0 0 1 7.8 2m-.2 2A3.6 3.6 0 0 0 4 7.6v8.8C4 18.39 5.61 20 7.6 20h8.8a3.6 3.6 0 0 0 3.6-3.6V7.6C20 5.61 18.39 4 16.4 4zm9.65 1.5a1.25 1.25 0 0 1 1.25 1.25A1.25 1.25 0 0 1 17.25 8A1.25 1.25 0 0 1 16 6.75a1.25 1.25 0 0 1 1.25-1.25M12 7a5 5 0 0 1 5 5a5 5 0 0 1-5 5a5 5 0 0 1-5-5a5 5 0 0 1 5-5m0 2a3 3 0 0 0-3 3a3 3 0 0 0 3 3a3 3 0 0 0 3-3a3 3 0 0 0-3-3" /></svg>
                    <svg class="w-7 h-7 text-gray-800 cursor-pointer rounded-full hover:border-2 border-gray-800" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33c.85 0 1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2" /></svg>
                </div>

                <div class="border-b w-full pb-2 self-start flex justify-start gap-2 text-xs mt-4 r-3">
                    <div class="bg-gray-300 text-gray-700 hover:bg-slate-200 transition-colors duration-200 rounded-lg cursor-pointer px-3 p-1">Exhibits</div>
                    <div class=" bg-white text-gray-700 hover:bg-slate-200 transition-colors duration-200 rounded-lg cursor-pointer px-3 p-1">Pages</div>
                </div>
            <div id="oll" class="border border-gray-300 rounded-md w-full p-4 mt-2 overflow-y-auto max-h-[450px] overflow-x-hidden tabs">
                <div id="posts">
                    @foreach (var post in Model.posts)
                    {
                        <div class="post bg-white rounded-md p-4 my-4 shadow-md">
                            @if (post.Image != null)
                            {
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(post.Image)" class="h-[100px] w-[100px] rounded-md mb-4" />
                            }
                            <div>
                                <p class="text-gray-700">@post.Content</p>
                            </div>
                        </div>
                    }
                </div>
            </div>


    
        </div>
    </div>
</div>


<script>

    
function changeTheme(themeName) {
        const container = document.getElementById('container');
          document.getElementById('selectedTheme').value = themeName;
        container.classList.remove('theme1', 'theme2', 'theme3', 'theme4', 'theme5', 'theme6', 'theme7', 'theme8', 'theme9', 'theme10');
        container.classList.add(themeName);
    }
</script>
<style>
    .theme1 {
        background-color: #ffffff; 
    }

    .theme2 {
        background-color: #f2f2f2; 
    }

    .theme3 {
        background-color: #d9d9d9; 
    }

    .theme4 {
        background-color: #bfbfbf; 
    }

    .theme5 {
        background-color: #a6a6a6;
    }

    .theme6 {
        background-color: #3b5998; 
    }

    .theme7 {
        background-color: #00acee; 
    }

    .theme8 {
        background-color: #0077B5;
    }

    .theme9 {
        background-color: #1DA1F2; 
    }
    .theme10 {
        background-color: #FF0000; 
    }
</style>